[user]
	email = francois.teychene@gmail.com
	name = fteychene
	signinkey = 97938F2B2A7C5BC5
	signingkey = 97938F2B2A7C5BC5
# [includeIf "gitdir:~/saagie/**"]
#     path = ~/saagie/.gitconfig
# [includeIf "gitdir:~/go/src/gitlab.saagie.tech/**"]
#     path = ~/saagie/.gitconfig
# [merge]
# 	keepBackup = false;
# 	tool = p4merge
# [mergetool]
# 	prompt = false
# [mergetool "p4merge"]
# 	cmd = p4merge "$BASE" "$REMOTE" "$LOCAL" "$MERGED"
# 	keepTemporaries = false
# 	trustExitCode = false
# 	keepBackup = false
# [diff]
# 	tool = p4merge
# [difftool]
# 	prompt = false
# [difftool "p4merge"]
# 	cmd = p4merge "$LOCAL" "$REMOTE"
# 	keepTemporaries = false
# 	trustExitCode = false
# 	keepBackup = false
[pull]
	rebase = true
[alias]
	please = push --force-with-lease
	commend = commit --amend --no-edit
	it = !git init && git commit -m “root” --allow-empty
	shorty = status --short --branch
	grog = log --graph --abbrev-commit --decorate --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
	stsh = stash --keep-index
	staash = stash --include-untracked
	staaash = stash --all
	exclude = !sh -c 'echo "$1" >> .git/info/exclude' -
	reset-to = "!f() { \
		      git fetch $1 $2; \
		      git reset --hard $1/$2; \
		}; f"
	adopt = "!f() { \
            	user=$(echo $1 | cut -f1 -d:);\
		  		branch=$(echo $1 | cut -f2 -d:);\
				echo Adopting $user $branch ;\
				git remote add $user git@github.com:$user/cloud.git || echo 'User already exist' ;\
				git fetch $user $branch ;\
				if [ -z "`git branch --list adopt/$user/$branch`" ]; then \
					git checkout -b adopt/$user/$branch --track $user/$branch ;\
				else \
					git checkout adopt/$user/$branch ;\
					git reset --hard $user/$branch ;\
				fi; \
		}; f"
	files-from = "!f() { git diff-tree --no-commit-id --name-only -r $1; }; f"
[commit]
	gpgsign = true
